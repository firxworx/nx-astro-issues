{
  // "extends": ["../../tsconfig.base.json", "astro/tsconfigs/strict"], // this causes error with outdated astro deps
  "extends": "../../tsconfig.base.json", // for astro compatibility use a string instead of multiple extends
  "include": ["src"],
  "compilerOptions": {
    "strict": true,
    "module": "ESNext",
    "target": "ESNext",
    "jsx": "react",

    // copy and paste from astro/tsconfigs/base because astro can't support multiple extends (ts5+ at this time)
    //
    // Enable node-style module resolution, for things like npm package imports.
    "moduleResolution": "Bundler",
    // Allow importing TypeScript files using their native extension (.ts(x)).
    "allowImportingTsExtensions": true,
    // Enable JSON imports.
    "resolveJsonModule": true,
    // Enforce the usage of type-only imports when needed, which helps avoiding bundling issues.
    "verbatimModuleSyntax": true,
    // Ensure that each file can be transpiled without relying on other imports.
    // This is redundant with the previous option, however it ensures that it's on even if someone disable `verbatimModuleSyntax`
    "isolatedModules": true,
    // Astro directly run TypeScript code, no transpilation needed.
    "noEmit": true,
    // Report an error when importing a file using a casing different from another import of the same file.
    "forceConsistentCasingInFileNames": true,
    // Properly support importing CJS modules in ESM
    "esModuleInterop": true,
    // Skip typechecking libraries and .d.ts files
    "skipLibCheck": true,
    // Allow JavaScript files to be imported
    "allowJs": true
  }
}
